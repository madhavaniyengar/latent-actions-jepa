[INFO] Using dtype=torch.bfloat16 (mixed_precision=True)
/home/madhavan/miniconda3/envs/jepa/lib/python3.9/site-packages/torch/nn/modules/transformer.py:379: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)
  warnings.warn(
[INFO    ][2025-01-20 23:14:48][init_video_model         ] MultiMaskWrapper(
  (backbone): VisionTransformer(
    (patch_embed): PatchEmbed3D(
      (proj): Conv3d(3, 1024, kernel_size=(2, 16, 16), stride=(2, 16, 16))
    )
    (blocks): ModuleList(
      (0-23): 24 x Block(
        (norm1): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (qkv): Linear(in_features=1024, out_features=3072, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=1024, out_features=1024, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (norm2): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=1024, out_features=4096, bias=True)
          (act): GELU(approximate='none')
          (fc2): Linear(in_features=4096, out_features=1024, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (norm): LayerNorm((1024,), eps=1e-06, elementwise_affine=True)
  )
)
[INFO    ][2025-01-20 23:14:48][init_video_model         ] PredictorMultiMaskWrapper(
  (backbone): VisionTransformerPredictor(
    (predictor_embed): Linear(in_features=1024, out_features=384, bias=True)
    (mask_tokens): ParameterList(
        (0): Parameter containing: [torch.float32 of size 1x1x384 (cuda:0)]
        (1): Parameter containing: [torch.float32 of size 1x1x384 (cuda:0)]
    )
    (predictor_blocks): ModuleList(
      (0-11): 12 x Block(
        (norm1): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
        (attn): Attention(
          (qkv): Linear(in_features=384, out_features=1152, bias=True)
          (attn_drop): Dropout(p=0.0, inplace=False)
          (proj): Linear(in_features=384, out_features=384, bias=True)
          (proj_drop): Dropout(p=0.0, inplace=False)
        )
        (norm2): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=384, out_features=1536, bias=True)
          (act): GELU(approximate='none')
          (fc2): Linear(in_features=1536, out_features=384, bias=True)
          (drop): Dropout(p=0.0, inplace=False)
        )
      )
    )
    (predictor_norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
    (predictor_proj): Linear(in_features=384, out_features=1024, bias=True)
  )
)
[INFO    ][2025-01-20 23:14:48][init_video_model         ] ActionTransformer(
  (pos_encoder): PositionalEncoding(
    (dropout): Dropout(p=0.1, inplace=False)
  )
  (transformer_encoder): TransformerEncoder(
    (layers): ModuleList(
      (0-1): 2 x TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (out_proj): NonDynamicallyQuantizableLinear(in_features=1024, out_features=1024, bias=True)
        )
        (linear1): Linear(in_features=1024, out_features=2048, bias=True)
        (dropout): Dropout(p=0.1, inplace=False)
        (linear2): Linear(in_features=2048, out_features=1024, bias=True)
        (norm1): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((1024,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.1, inplace=False)
        (dropout2): Dropout(p=0.1, inplace=False)
      )
    )
  )
)
[INFO    ][2025-01-20 23:14:48][init_video_model         ] Encoder number of parameters: 303885312
[INFO    ][2025-01-20 23:14:48][init_video_model         ] Predictor number of parameters: 22082944
[INFO    ][2025-01-20 23:14:48][init_video_model         ] Action MLP number of parameters: 16799744
[INFO] Initializing basic multi-block mask
[INFO    ][2025-01-20 23:14:48][make_videodataset        ] VideoDataset dataset created
[INFO    ][2025-01-20 23:14:48][make_videodataset        ] VideoDataset unsupervised data loader created
[INFO] Iterations per epoch: ipe=276, dataset length=276
[INFO    ][2025-01-20 23:14:48][make_videodataset        ] VideoDataset dataset created
[INFO    ][2025-01-20 23:14:48][make_videodataset        ] VideoDataset unsupervised data loader created
[INFO    ][2025-01-20 23:14:48][init_opt                 ] Using AdamW
/home/madhavan/jepa/app/vjepa/utils.py:299: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  scaler = torch.cuda.amp.GradScaler() if mixed_precision else None
/home/madhavan/jepa/app/vjepa/utils.py:79: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(r_path, map_location=torch.device('cpu'))
[INFO    ][2025-01-20 23:14:52][load_checkpoint          ] loaded pretrained encoder from epoch 300 with msg: <All keys matched successfully>
[INFO    ][2025-01-20 23:14:52][load_checkpoint          ] Encountered exception when loading checkpoint Error(s) in loading state_dict for DistributedDataParallel:
	Missing key(s) in state_dict: "module.backbone.action_pos_embed".
[INFO] Initializing loader...
[INFO] Unsupervised loader length = 276
[INFO] Starting epoch 1/400
/home/madhavan/jepa/app/vjepa/train_combined.py:648: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(dtype=dtype, enabled=mixed_precision):
/home/madhavan/miniconda3/envs/jepa/lib/python3.9/contextlib.py:87: FutureWarning: `torch.backends.cuda.sdp_kernel()` is deprecated. In the future, this context manager will be removed. Please see `torch.nn.attention.sdpa_kernel()` for the new context manager, with updated signature.
  self.gen = func(*args, **kwds)
[INFO    ][2025-01-20 23:14:59][process_main             ] Destroyed process group for rank 0.
Process Process-1:
Traceback (most recent call last):
  File "/home/madhavan/miniconda3/envs/jepa/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/home/madhavan/miniconda3/envs/jepa/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/madhavan/jepa/app/main.py", line 77, in process_main
    app_main(params['app'], args=params, train_script=train_script)
  File "/home/madhavan/jepa/app/scaffold.py", line 19, in main
    return importlib.import_module(f'app.{app}.{train_script}').main(
  File "/home/madhavan/jepa/app/vjepa/train_combined.py", line 709, in main
    optim_stats), gpu_etime_ms = gpu_timer(train_step)
  File "/home/madhavan/jepa/src/utils/logging.py", line 24, in gpu_timer
    result = closure()
  File "/home/madhavan/jepa/app/vjepa/train_combined.py", line 650, in train_step
    z_ = forward_context(clips, text_embeddings, p)
  File "/home/madhavan/jepa/app/vjepa/train_combined.py", line 616, in forward_context
    for seq, pi_ in zip(z, p_splits):
TypeError: 'NoneType' object is not iterable
